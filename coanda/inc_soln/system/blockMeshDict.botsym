/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
hu            0.5;
numy           95;
numh            5;

vertices
(
    (-10   0  .5)  // 0
    (-10   0 -.5)  // 1
    (-10 $hu  .5)  // 2
    (-10 $hu -.5)  // 3
    (-10  10  .5)  // 4
    (-10  10 -.5)  // 5
    ( -4   0  .5)  // 6
    ( -4   0 -.5)  // 7
    ( -4 $hu  .5)  // 8
    ( -4 $hu -.5)  // 9
    ( -4  10  .5)  // 10
    ( -4  10 -.5)  // 11
    (  4   0  .5)  // 12
    (  4   0 -.5)  // 13
    (  4 $hu  .5)  // 14
    (  4 $hu -.5)  // 15
    (  4  10  .5)  // 16
    (  4  10 -.5)  // 17
    ( 10   0  .5)  // 18
    ( 10   0 -.5)  // 19
    ( 10 $hu  .5)  // 20
    ( 10 $hu -.5)  // 21
    ( 10  10  .5)  // 22
    ( 10  10 -.5)  // 23
);

blocks
(
    hex (1 7 9 3 0 6 8 2) (60 $numh 1) simpleGrading (1 1 1)
    hex (3 9 11 5 2 8 10 4) (60 $numy 1) simpleGrading (1 1 1)
    hex (9 15 17 11 8 14 16 10) (80 $numy 1) simpleGrading (1 1 1)
    hex (15 21 23 17 14 20 22 16) (60 $numy 1) simpleGrading (1 1 1)
    hex (13 19 21 15 12 18 20 14) (60 $numh 1) simpleGrading (1 1 1)
);

edges
(
    line 6 8
    line 8 14
    line 14 12
    line 7 9
    line 9 15
    line 15 13
    line 12 13
    line 6 7
);

boundary
(
    down
    {
        type symmetryPlane;
        faces
        (
            (0 6 7 1)
            (12 18 19 13)
        );
    }
    right
    {
        type patch;
        faces
        (
            (18 19 21 20)
            (20 21 23 22)
        );
    }
    up
    {
        type symmetryPlane;
        faces
        (
            (4 10 11 5)
            (10 16 17 11)
            (16 22 23 17)
        );
    }
    left
    {
        type patch;
        faces
        (
            (0 1 3 2)
            (2 3 5 4)
        );
    }
    cylinder
    {
        type symmetry;
        faces
        (
            (6 7 9 8)
            (8 14 15 9)
            (14 12 13 15)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
