/*---------------------------------*- C++ -*-----------------------------------*/
//    //////////////      ///////////////
//    //////////////      //////////////
//         ////           ////             /////       ////  //  /// //// ////
//         ////     ////  ///////////   ///    ///  ///    ///   ////  ///  ///
//  ////   ////           ///////////   ///    ///  ///    ///   ///   ///  ///
//   //// ////            ////          ///    ///  ///    ///   ///   ///  ///
//     /////              ////            /////       ///// ///  ///   ///  ///
/*---------------------------------*- C++ -*-----------------------------------*/

FoamFile
{
		version			2.0;
		format			ascii;
		class				dictionary;
		object			blockMeshDict;
}

// ***************************************************************************** //

scale				1;

vertices
(
		(0.05340442578145063 0.0 -0.5)	//	0
		(0.05340442578145063 0.0 0.5)	//	1
		(0.09420922514466419 0.0 -0.5)	//	2
		(0.09420922514466419 0.0 0.5)	//	3
		(0.07840442578145063 0.005444985940958212 -0.5)	//	4
		(0.07840442578145063 0.005444985940958212 0.5)	//	5
		(0.05340442578145063 0.005444985940958212 -0.5)	//	6
		(0.05340442578145063 0.005444985940958212 0.5)	//	7
		(0.1004561065694157 0.003606638672175951 -0.5)	//	8
		(0.1004561065694157 0.003606638672175951 0.5)	//	9
		(0.1 0.005444985940958212 -0.5)	//	10
		(0.1 0.005444985940958212 0.5)	//	11
		(0.10340442578145063 0.005308851562901268 -0.5)	//	12
		(0.10340442578145063 0.005308851562901268 0.5)	//	13
		(0.10340442578145063 0.005444985940958212 -0.5)	//	14
		(0.10340442578145063 0.005444985940958212 0.5)	//	15
		(0.10340442578145063 -0.0015 -0.5)	//	16
		(0.10340442578145063 -0.0015 0.5)	//	17
		(0.0 -0.0015 -0.5)	//	18
		(0.0 -0.0015 0.5)	//	19
		(0.0 -1.0 -0.5)	//	20
		(0.0 -1.0 0.5)	//	21
		(0.10340442578145063 -1.0 -0.5)	//	22
		(0.10340442578145063 -1.0 0.5)	//	23
		(1.0 -1.0 -0.5)	//	24
		(1.0 -1.0 0.5)	//	25
		(1.0 -0.25 -0.5)	//	26
		(1.0 -0.25 0.5)	//	27
		(1.0 0.25 -0.5)	//	28
		(1.0 0.25 0.5)	//	29
		(1.0 0.25108907502445554 -0.5)	//	30
		(1.0 0.25108907502445554 0.5)	//	31
		(1.0 0.2522819158818962 -0.5)	//	32
		(1.0 0.2522819158818962 0.5)	//	33
		(1.0 1.0 -0.5)	//	34
		(1.0 1.0 0.5)	//	35
		(0.10340442578145063 1.0 -0.5)	//	36
		(0.10340442578145063 1.0 0.5)	//	37
		(0.09420922514466419 1.0 -0.5)	//	38
		(0.09420922514466419 1.0 0.5)	//	39
		(0.0 1.0 -0.5)	//	40
		(0.0 1.0 0.5)	//	41
		(0.0 0.006944985940958211 -0.5)	//	42
		(0.0 0.006944985940958211 0.5)	//	43
		(0.08607100585317451 0.006944985940958211 -0.5)	//	44
		(0.08607100585317451 0.006944985940958211 0.5)	//	45
		(0.10340442578145063 0.005743196155318379 -0.5)	//	46
		(0.10340442578145063 0.005743196155318379 0.5)	//	47
		(-1.0 0.002722492970479106 -0.5)	//	48
		(-1.0 0.002722492970479106 0.5)	//	49
		(-0.004222492970479106 0.002722492970479106 -0.5)	//	50
		(-0.004222492970479106 0.002722492970479106 0.5)	//	51
);

blocks
(
		hex ( 0  2  4  6  1  3  5  7) (15 15 1) simpleGrading ( 1   1  1) // 0
		hex ( 2  8 10  4  3  9 11  5) (15 15 1) simpleGrading (.25  1  1) // 1
		hex ( 8 12 14 10  9 13 15 11) (15 15 1) simpleGrading ( 1   1  1) // 2
		hex (20 22 16 18 21 23 17 19) (116 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 3
		hex (24 26 16 22 25 27 17 23) (46 46 1) simpleGrading (0.0003333333333333333  0.0003333333333333333  1) // 4
		hex (26 28 12 16 27 29 13 17) (46 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 5
		hex (28 30 14 12 29 31 15 13) (15 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 6
		hex (30 32 46 14 31 33 47 15) (8 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 7
		hex (32 34 36 46 33 35 37 47) (46 46 1) simpleGrading (3000  0.0003333333333333333  1) // 8
		hex (36 38 44 46 37 39 45 47) (76 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 9
		hex (38 40 42 44 39 41 43 45) (46 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 10
		hex (40 48 50 42 41 49 51 43) (46 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 11
		hex (48 20 18 50 49 21 19 51) (46 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 12
);

edges
(
		arc   2  8  60.0 (0 0  1)
		arc   3  9  60.0 (0 0  1)
		arc   8 12  60.0 (0 0 -1)
		arc   9 13  60.0 (0 0 -1)
		arc  12 16 180.0 (0 0 -1)
		arc  13 17 180.0 (0 0 -1)
		arc  44 46  7.446208569482616 (0 0 -1)
		arc  45 47  7.446208569482616 (0 0 -1)
		arc  40 48  90.0 (0 0  1)
		arc  41 49  90.0 (0 0  1)
		arc  48 20  90.0 (0 0  1)
		arc  49 21  90.0 (0 0  1)
		arc  42 50  90.0 (0 0  1)
		arc  43 51  90.0 (0 0  1)
		arc  50 18  90.0 (0 0  1)
		arc  51 19  90.0 (0 0  1)
);

boundary
(
    down
    {
        type patch;
        faces
        (
            (20 22 23 21)
            (22 24 25 23)
        );
    }
    right
    {
        type patch;
        faces
        (
            (24 26 27 25)
            (26 28 29 27)
            (28 30 31 29)
            (30 32 33 31)
            (32 34 35 33)
        );
    }
    up
    {
        type patch;
        faces
        (
            (34 36 37 35)
            (36 38 39 37)
            (38 40 41 39)
        );
    }
    meanFlow
    {
        type patch;
        faces
        (
            (40 48 49 41)
            (48 20 21 49)
        );
    }

    surface
    {
        type wall;
        faces
        (
            (42 44 45 43)
            (44 46 47 45)
            (46 14 15 47)            
            (12 16 17 13)
            (16 18 19 17)
            (42 50 51 43)
            (50 18 19 51)
        );
    }

    surfaceInner
    {
        type wall;
        faces
        (
            ( 0  2  3  1)
            ( 4  6  7  5)
            (14 10 11 15)
            (10  4  5 11)
            ( 2  8  9  3)
            ( 8 12 13  9)
        );
    }

    coandaInlet
    {
        type patch;
        faces
        (
            (0 6 7 1)
        );
    }
);
