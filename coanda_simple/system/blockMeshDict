/*---------------------------------*- C++ -*-----------------------------------*/
//    //////////////      ///////////////
//    //////////////      //////////////
//         ////           ////             /////       ////  //  /// //// ////
//         ////     ////  ///////////   ///    ///  ///    ///   ////  ///  ///
//  ////   ////           ///////////   ///    ///  ///    ///   ///   ///  ///
//   //// ////            ////          ///    ///  ///    ///   ///   ///  ///
//     /////              ////            /////       ///// ///  ///   ///  ///
/*---------------------------------*- C++ -*-----------------------------------*/

FoamFile
{
		version			2.0;
		format			ascii;
		class				dictionary;
		object			blockMeshDict;
}

// ***************************************************************************** //

scale				1;

vertices
(
		(0.193025 0.003 -0.5)	//	0
		(0.193025 0.003 0.5)	//	1
		(0.19302501 0.00315 -0.5)	//	2
		(0.19302501 0.00315 0.5)	//	3
		(0.19302502 0.00333 -0.5)	//	4
		(0.19302502 0.00333 0.5)	//	5
		(0.173025 0.003975 -0.5)	//	6
		(0.173025 0.003975 0.5)	//	7
		(0.003975 0.003975 -0.5)	//	8
		(0.003975 0.003975 0.5)	//	9
		(0.003975 -0.003975 -0.5)	//	10
		(0.003975 -0.003975 0.5)	//	11
		(0.173025 -0.003975 -0.5)	//	12
		(0.173025 -0.003975 0.5)	//	13
		(0.19302502 -0.00333 -0.5)	//	14
		(0.19302502 -0.00333 0.5)	//	15
		(0.19302501 -0.00315 -0.5)	//	16
		(0.19302501 -0.00315 0.5)	//	17
		(0.193025 -0.003 -0.5)	//	18
		(0.193025 -0.003 0.5)	//	19
		(0.003975 -1.0 -0.5)	//	20
		(0.003975 -1.0 0.5)	//	21
		(0.173025 -1.0 -0.5)	//	22
		(0.173025 -1.0 0.5)	//	23
		(0.19302503000000001 -1.0 -0.5)	//	24
		(0.19302503000000001 -1.0 0.5)	//	25
		(0.19302503000000001 1.0 -0.5)	//	26
		(0.19302503000000001 1.0 0.5)	//	27
		(0.173025 1.0 -0.5)	//	28
		(0.173025 1.0 0.5)	//	29
		(0.003975 1.0 -0.5)	//	30
		(0.003975 1.0 0.5)	//	31
		(0.0 0.0 -0.5)	//	32
		(0.0 0.0 0.5)	//	33
		(-1.0 0.0 -0.5)	//	34
		(-1.0 0.0 0.5)	//	35
		(0.0 0.0 -0.5)	//	36
		(0.0 0.0 0.5)	//	37
		(0.0 0.0 -0.5)	//	38
		(0.0 0.0 0.5)	//	39
		(0.0 0.0 -0.5)	//	40
		(0.0 0.0 0.5)	//	41
		(0.0 0.0 -0.5)	//	42
		(0.0 0.0 0.5)	//	43
);

blocks
(
		hex (16  2  0 18 17  3  1 19) (75 10 1) simpleGrading ( 1   1  1) // 6
		hex (14  4  2 16 15  5  3 17) (75 10 1) simpleGrading ( 1   1  1) // 6
		hex (24 26  4 14 25 27  5 15) (75 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 6
		hex (26 28  6  4 27 29  7  5) (25 46 1) simpleGrading (4  0.0003333333333333333  1) // 6
		hex (28 30  8  6 29 31  9  7) (60 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 7
		hex (30 34 32  8 31 35 33  9) (46 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 8
		hex (34 20 10 32 35 21 11 33) (46 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 8
		hex (20 22 12 10 21 23 13 11) (60 46 1) simpleGrading ( 1  0.0003333333333333333  1) // 9
		hex (22 24 14 12 23 25 15 13) (25 46 1) simpleGrading (0.25  0.0003333333333333333  1) //10
);

edges
(
		arc   0 18 180.0 (0 0 -1)
		arc   1 19 180.0 (0 0 -1)
		arc   2 16 180.0 (0 0 -1)
		arc   3 17 180.0 (0 0 -1)
		arc   4 14 180.0 (0 0 -1)
		arc   5 15 180.0 (0 0 -1)
		arc  30 34  90.0 (0 0  1)
		arc  31 35  90.0 (0 0  1)
		arc  34 20  90.0 (0 0  1)
		arc  35 21  90.0 (0 0  1)
		arc  32  8  90.0 (0 0 -1)
		arc  33  9  90.0 (0 0 -1)
		arc  32 10  90.0 (0 0  1)
		arc  33 11  90.0 (0 0  1)
		arc   4  6    4.630848134413652 (0 0  1)
		arc   5  7    4.630848134413652 (0 0  1)
		arc  12 14    4.630848134413652 (0 0  1)
		arc  13 15    4.630848134413652 (0 0  1)
		arc  26 24 180.0 (0 0 -1)
		arc  27 25 180.0 (0 0 -1)
);

boundary
(
    down
    {
        type patch;
        faces
        (
            (20 22 23 21)
            (22 24 25 23)
        );
    }
    right
    {
        type patch;
        faces
        (
            (24 26 27 25)
        );
    }
    up
    {
        type patch;
        faces
        (
            (26 28 29 27)
            (28 30 31 29)
        );
    }
    meanFlow
    {
        type patch;
        faces
        (
            (30 34 35 31)
            (34 20 21 35)
        );
    }

    surface
    {
        type wall;
        faces
        (
            ( 8 32 33  9)
            (32 10 11 33)
            (10 12 13 11)
            (12 14 15 13)
            (14 16 17 15)
            ( 2  4  5  3)
            ( 4  6  7  5)
            ( 6  8  9  7)
            (18  0  1 19)
        );
    }


    coandaUpper
    {
        type patch;
        faces
        (
            ( 0  2  3  1)
        );
    }
    coandaLower
    {
        type patch;
        faces
        (
            (16 18 19 17)
        );
    }
);
